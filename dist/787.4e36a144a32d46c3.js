"use strict";(self.webpackChunkskeleton=self.webpackChunkskeleton||[]).push([[787],{787:(y,m,l)=>{l.r(m),l.d(m,{default:()=>w});var p=l(6814),h=l(7818),e=l(9468),g=l(9074),_=l(5738),u=l(7911),f=l(220);const R=function(i,r){return{"bg-info":i,"bg-trans":r}};function v(i,r){if(1&i){const t=e.EpF();e.TgZ(0,"tr",11),e.NdJ("click",function(a){const n=e.CHM(t).index,c=e.oxw();return e.KtG(c.handleRoleRowClick(a,n))}),e.TgZ(1,"td"),e._UZ(2,"i",12),e.qZA(),e.TgZ(3,"td"),e._uU(4),e.qZA(),e.TgZ(5,"td"),e._uU(6),e.ALo(7,"date"),e.qZA(),e.TgZ(8,"td")(9,"div",13),e._UZ(10,"input",14),e.qZA()()()}if(2&i){const t=r.$implicit,s=r.index,a=e.oxw();e.Q6J("ngClass",e.WLB(8,R,s===a.activeRow,s!==a.activeRow)),e.xp6(4),e.Oqu(t.rolename),e.xp6(2),e.Oqu(e.Dn7(7,4,t.createddatetime,"dd/MM/yyyy HH:mm:ss","UTC")),e.xp6(4),e.Q6J("checked",t.status)}}function A(i,r){if(1&i){const t=e.EpF();e.TgZ(0,"div",18)(1,"input",19),e.NdJ("change",function(a){e.CHM(t);const o=e.oxw().$implicit,n=e.oxw();return e.KtG(n.handleAccessChange(a,o.title))}),e.qZA(),e.TgZ(2,"label",20),e._uU(3),e.qZA()()}if(2&i){const t=r.$implicit;e.xp6(1),e.s9C("id",t.apiname),e.Q6J("checked",t.isActive),e.xp6(1),e.s9C("for",t.apiname),e.xp6(1),e.hij(" ",t.name," ")}}function b(i,r){if(1&i&&(e.TgZ(0,"app-card",15)(1,"div",16),e.YNc(2,A,4,4,"div",17),e.qZA()()),2&i){const t=r.$implicit;e.s9C("cardTitle",t.title),e.Q6J("options",!1),e.xp6(2),e.Q6J("ngForOf",t.properties)}}function C(i,r){1&i&&e._uU(0," Updated Successfully!!\n")}let w=(()=>{class i{constructor(t,s,a){this.headerService=t,this.baseService=s,this.toastService=a,this.roles=[],this.acessDetails=[],this.tbRole="",this.roleAdded=!1,this.activeRow=-1,t.setHeaderName("User Access and Role")}updateAccessDetails(){this.acessDetails=[{title:"Dashboard Access",properties:[{name:"NPD Lab",apiname:"labdash",isActive:-1!=this.activeRow&&this.roles[this.activeRow].labdash},{name:"Running Project",apiname:"runningprojectdash",isActive:-1!=this.activeRow&&this.roles[this.activeRow].runningprojectdash},{name:"History Project",apiname:"historicalprojects",isActive:-1!=this.activeRow&&this.roles[this.activeRow].historicalprojects}]},{title:"Analysis",properties:[{name:"Project Analysis",apiname:"dataanalysis",isActive:-1!=this.activeRow&&this.roles[this.activeRow].dataanalysis},{name:"Project Report",apiname:"logreport",isActive:-1!=this.activeRow&&this.roles[this.activeRow].logreport},{name:"Environment Report",apiname:"envreport",isActive:-1!=this.activeRow&&this.roles[this.activeRow].envreport},{name:"Process Report",apiname:"processreport",isActive:-1!=this.activeRow&&this.roles[this.activeRow].processreport}]},{title:"Maitenance Access",properties:[{name:"User Management",apiname:"usermanagment",isActive:-1!=this.activeRow&&this.roles[this.activeRow].usermanagment},{name:"Remote Op.",apiname:"remoteoperation",isActive:-1!=this.activeRow&&this.roles[this.activeRow].remoteoperation},{name:"Maintenance Log",apiname:"maintenancetool",isActive:-1!=this.activeRow&&this.roles[this.activeRow].maintenancetool},{name:"User Note",apiname:"usernote",isActive:-1!=this.activeRow&&this.roles[this.activeRow].usernote}]}]}ngOnInit(){this.getAllRoles()}getAllRoles(){this.baseService.getRoles().subscribe(t=>{this.roles=t,this.updateAccessDetails()})}handleRoleChange(t){this.tbRole=t.target.value}handleAddRole(){if(""===this.tbRole||this.roleAdded)return;if(this.roles.some(o=>o.rolename===this.tbRole))return void this.toastService.show({template:"Role already exist in system",delay:5e3,classname:"bg-danger"});const s=(new Date).toLocaleDateString("ko-kr").slice(0,-1).replaceAll(". ","-"),a={roleid:this.roles.length+1,rolename:this.tbRole,createddatetime:s,status:!0,createdbyid:1,labdash:!1,runningprojectdash:!1,historicalprojects:!1,dataanalysis:!1,logreport:!1,maintenancetool:!1,remoteoperation:!1,alarmaccess:!1,usermanagment:!1,envreport:!1,groupcreport:!1,usernote:!1,processreport:!1,eodd:!1,aodd:!1};this.roles.push(a),this.roleAdded=!0,this.tbRole="",this.activeRow=a.roleid-1,this.updateAccessDetails()}handleRoleRowClick(t,s){this.activeRow=s,this.updateAccessDetails()}handleAccessChange(t,s){const a=t.target,o=a.id;if(-1===this.activeRow)return;const n=this.acessDetails.map(c=>(c.title==s&&(c.properties=c.properties.map(d=>(d.apiname==o&&(d.isActive=a.checked),d))),c));this.acessDetails=n}handleSubmit(){const t=this.acessDetails.map(s=>s.properties.map(o=>`${o.apiname}=${o.isActive}`));if(this.roleAdded){const s={id:1,labdash:!1,running:!1,historical:!1,datananlysis:!1,logreport:!1,maintenancetool:!1,remoteoperation:!1,alarmaccess:!1,usermanagment:!1,eodd:!1,aodd:!1};return this.acessDetails.map(a=>{a.properties.map(o=>{if(o.apiname){let n=o.apiname;"runningprojectdash"==n?n="running":"historicalprojects"==n?n="historical":"dataanalysis"==n&&(n="datananlysis"),s[n]=o.isActive}})}),s.name=this.roles[this.activeRow].rolename,s.status=!0,s.date=(new Date).toLocaleString(),console.log(JSON.stringify(s)),void this.baseService.insertRole(s).subscribe(a=>{console.log("fn_getAllRoles"),this.getAllRoles(),this.toastService.show("Found Duplicate"==a.message?{template:a.message,delay:3e3,classname:"bg-danger"}:{template:a.message,delay:3e3,classname:"bg-success"})})}this.baseService.updateRole(this.roles[this.activeRow].roleid,t.flat()).subscribe(s=>{console.log("fn_getAllRoles"),this.getAllRoles(),this.toastService.show({template:s.message,delay:3e3,classname:"bg-success"})})}static#e=this.\u0275fac=function(s){return new(s||i)(e.Y36(g.r),e.Y36(_.b),e.Y36(u.k))};static#t=this.\u0275cmp=e.Xpm({type:i,selectors:[["app-role-management"]],standalone:!0,features:[e.jDz],decls:15,vars:7,consts:[["cardTitle","Roles Management","blockClass","table-border-style",3,"options","customDate"],[1,"app-card-subheader","mt-3","d-flex","gap-3"],["type","text","placeholder","New Role",1,"form-control","w-25",3,"value","disabled","change"],[1,"btn","btn-success",3,"disabled","click"],[1,"table-responsive"],[1,"table","table-styling"],[3,"ngClass","click",4,"ngFor","ngForOf"],[3,"cardTitle","options",4,"ngFor","ngForOf"],[1,"d-flex","justify-content-end"],[1,"btn","btn-primary",3,"click"],["updateSuccess",""],[3,"ngClass","click"],[1,"icon","feather","icon-user"],[1,"form-check","form-switch"],["type","checkbox","role","switch","id","flexSwitchCheckDefault",1,"form-check-input",3,"checked"],[3,"cardTitle","options"],[1,"properties","d-flex","gap-3"],["class","property",4,"ngFor","ngForOf"],[1,"property"],["type","checkbox",1,"d-none",3,"id","checked","change"],[1,"p-4","border","br-4",3,"for"]],template:function(s,a){1&s&&(e.TgZ(0,"app-card",0)(1,"div",1)(2,"input",2),e.NdJ("change",function(n){return a.handleRoleChange(n)}),e.qZA(),e.TgZ(3,"button",3),e.NdJ("click",function(){return a.handleAddRole()}),e._uU(4,"Add Role"),e.qZA()(),e.TgZ(5,"div",4)(6,"table",5)(7,"tbody"),e.YNc(8,v,11,11,"tr",6),e.qZA()()()(),e.YNc(9,b,3,3,"app-card",7),e.TgZ(10,"div",8)(11,"button",9),e.NdJ("click",function(){return a.handleSubmit()}),e._uU(12,"Submit"),e.qZA()(),e.YNc(13,C,1,0,"ng-template",null,10,e.W1O)),2&s&&(e.Q6J("options",!1)("customDate",!0),e.xp6(2),e.Q6J("value",a.tbRole)("disabled",a.roleAdded),e.xp6(1),e.Q6J("disabled",a.roleAdded),e.xp6(5),e.Q6J("ngForOf",a.roles),e.xp6(1),e.Q6J("ngForOf",a.acessDetails))},dependencies:[p.ez,p.mk,p.sg,p.uU,h.m,f.A],styles:[".properties[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background:linear-gradient(45deg,#2ed8b6,#59e0c5)!important}.br-4[_ngcontent-%COMP%]{border-radius:4px}"]})}return i})()}}]);